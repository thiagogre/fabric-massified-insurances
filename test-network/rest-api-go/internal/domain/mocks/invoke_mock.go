// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/invoke.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/thiagogre/fabric-massified-insurances/test-network/rest-api-go/internal/domain"
)

// MockInvokeInterface is a mock of InvokeInterface interface.
type MockInvokeInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInvokeInterfaceMockRecorder
}

// MockInvokeInterfaceMockRecorder is the mock recorder for MockInvokeInterface.
type MockInvokeInterfaceMockRecorder struct {
	mock *MockInvokeInterface
}

// NewMockInvokeInterface creates a new mock instance.
func NewMockInvokeInterface(ctrl *gomock.Controller) *MockInvokeInterface {
	mock := &MockInvokeInterface{ctrl: ctrl}
	mock.recorder = &MockInvokeInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvokeInterface) EXPECT() *MockInvokeInterfaceMockRecorder {
	return m.recorder
}

// ExecuteInvoke mocks base method.
func (m *MockInvokeInterface) ExecuteInvoke(channelID, chaincodeName, function string, args []string) (*domain.TransactionProposalStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecuteInvoke", channelID, chaincodeName, function, args)
	ret0, _ := ret[0].(*domain.TransactionProposalStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExecuteInvoke indicates an expected call of ExecuteInvoke.
func (mr *MockInvokeInterfaceMockRecorder) ExecuteInvoke(channelID, chaincodeName, function, args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteInvoke", reflect.TypeOf((*MockInvokeInterface)(nil).ExecuteInvoke), channelID, chaincodeName, function, args)
}
